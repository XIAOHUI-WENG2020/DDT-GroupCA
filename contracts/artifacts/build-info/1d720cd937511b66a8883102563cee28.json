{
	"id": "1d720cd937511b66a8883102563cee28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.9",
	"solcLongVersion": "0.6.9+commit.3e3065ac",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fareCalc.sol": {
				"content": "// SPDX-License-Identifier: GPL-30\r\n\r\npragma solidity ^0.6.9;\r\ncontract fareCalc {\r\n\r\n    //fare calculator.\r\n    int constant base_amount = 100;\r\n    function TaxiCalculator(int km, bool extra) internal pure returns (int total) { \r\n         int variable_amount = 0;\r\n         if(extra){\r\n             variable_amount = variable_amount + 10;\r\n         }\r\n         return ((base_amount + variable_amount + km)); //randon logic to calculate insurance amount based on age,time_period,alcohol state and smoke state.\r\n    }\r\n\r\n    function checkAvailability(bool available) internal  pure returns (bool is_taxi_available) { \r\n         //random logic for insurance eligibility. you can make your own :)\r\n         if (is_taxi_available = false) { //health insurance not allow for person above 60 age and if asking for term period greater than 40.\r\n             return false;\r\n         }else{\r\n             return true;\r\n         }\r\n    }\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/fareCalc.sol": {
				"fareCalc": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/fareCalc.sol\":63:941  contract fareCalc {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fareCalc.sol\":63:941  contract fareCalc {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220abf7d6bbf9f0eb54f640466057cab3f87a757559589d9d9ff948eacb0654f05164736f6c63430006090033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220abf7d6bbf9f0eb54f640466057cab3f87a757559589d9d9ff948eacb0654f05164736f6c63430006090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xF7 0xD6 0xBB 0xF9 CREATE 0xEB SLOAD 0xF6 BLOCKHASH CHAINID PUSH1 0x57 0xCA 0xB3 0xF8 PUSH27 0x757559589D9D9FF948EACB0654F05164736F6C6343000609003300 ",
							"sourceMap": "63:878:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220abf7d6bbf9f0eb54f640466057cab3f87a757559589d9d9ff948eacb0654f05164736f6c63430006090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xF7 0xD6 0xBB 0xF9 CREATE 0xEB SLOAD 0xF6 BLOCKHASH CHAINID PUSH1 0x57 0xCA 0xB3 0xF8 PUSH27 0x757559589D9D9FF948EACB0654F05164736F6C6343000609003300 ",
							"sourceMap": "63:878:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"TaxiCalculator(int256,bool)": "infinite",
								"checkAvailability(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 941,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abf7d6bbf9f0eb54f640466057cab3f87a757559589d9d9ff948eacb0654f05164736f6c63430006090033",
									".code": [
										{
											"begin": 63,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/fareCalc.sol\":\"fareCalc\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fareCalc.sol\":{\"keccak256\":\"0x90b99ef2c9d258b0e6fe8209e78249ae3eca977e37917e867d0236e4c9cefa20\",\"license\":\"GPL-30\",\"urls\":[\"bzz-raw://33a955ea76a12fd3e79ad51bf73c894f54fa99c3bf578f4c3569d605bf58a82d\",\"dweb:/ipfs/QmXvwZKHMJQUkJHQ2TK8ty8Ueb3S7TNZCfpz4uyHiXJXwu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/fareCalc.sol:16:32: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function checkAvailability(bool available) internal  pure returns (bool is_taxi_available) { \n                               ^------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 567,
					"file": "contracts/fareCalc.sol",
					"start": 553
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/fareCalc.sol": {
				"ast": {
					"absolutePath": "contracts/fareCalc.sol",
					"exportedSymbols": {
						"fareCalc": [
							54
						]
					},
					"id": 55,
					"license": "GPL-30",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "fareCalc",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "base_amount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 54,
									"src": "114:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "114:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "141:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "229:289:0",
										"statements": [
											{
												"assignments": [
													14
												],
												"declarations": [
													{
														"constant": false,
														"id": 14,
														"mutability": "mutable",
														"name": "variable_amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "242:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 13,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "242:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "264:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "242:23:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 17,
													"name": "extra",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "280:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 25,
												"nodeType": "IfStatement",
												"src": "277:76:0",
												"trueBody": {
													"id": 24,
													"nodeType": "Block",
													"src": "286:67:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "variable_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "302:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 19,
																		"name": "variable_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "320:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3130",
																		"id": 20,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "338:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "320:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "302:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 23,
															"nodeType": "ExpressionStatement",
															"src": "302:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 26,
																			"name": "base_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "373:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 27,
																			"name": "variable_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "387:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "373:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 29,
																		"name": "km",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "405:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "373:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 31,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "372:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"id": 32,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "371:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 12,
												"id": 33,
												"nodeType": "Return",
												"src": "364:45:0"
											}
										]
									},
									"documentation": null,
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "TaxiCalculator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "km",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "175:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "175:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "extra",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "183:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "174:20:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "total",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "218:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 10,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "218:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "217:11:0"
									},
									"scope": 54,
									"src": "151:367:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "617:313:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 42,
														"name": "is_taxi_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "711:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "731:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "711:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "883:40:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "906:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 41,
															"id": 49,
															"nodeType": "Return",
															"src": "899:11:0"
														}
													]
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "707:216:0",
												"trueBody": {
													"id": 47,
													"nodeType": "Block",
													"src": "738:141:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "861:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 41,
															"id": 46,
															"nodeType": "Return",
															"src": "854:12:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAvailability",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "available",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "553:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "552:16:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "is_taxi_available",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "593:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:24:0"
									},
									"scope": 54,
									"src": "526:404:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 55,
							"src": "63:878:0"
						}
					],
					"src": "38:903:0"
				},
				"id": 0
			}
		}
	}
}